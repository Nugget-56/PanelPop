// For the select function
let selectedPanel = null;

// Image api function
async function query(userInput) {
    try {
        document.getElementById('loader').style.display = 'block';

        const existingImgElement = document.querySelector('.edit-panel img');
        if (existingImgElement) {
            existingImgElement.remove();
        }

        console.log(userInput);
        console.log("running");
        const data = { "inputs": userInput };

        const response = await fetch(
            "https://xdwvg9no7pefghrn.us-east-1.aws.endpoints.huggingface.cloud",
            {
                headers: {
                    "Accept": "image/png",
                    "Authorization": "Bearer VknySbLLTUjbxXAXCjyfaFIPwUTCeRXbFSOjwRiCxsxFyhbnGjSFalPKrpvvDAaPVzWEevPljilLVDBiTzfIbWFdxOkYJxnOPoHhkkVGzAknaOulWggusSFewzpqsNWM",
                    "Content-Type": "application/json"
                },
                method: "POST",
                body: JSON.stringify(data),
            }
        );

        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const result = await response.blob();
        // console.log(result);
        const recivingPanel = document.getElementsByClassName('edit-panel')[0];
        const imgElement = document.createElement('img');
        
        document.getElementById('loader').style.display = 'none';

        imgElement.id = 'marker-img';
        imgElement.style.height = '100%'
        imgElement.style.width = '100%'   
        
        imgElement.src = URL.createObjectURL(result);
        imgElement.alt = "Generated image";

        recivingPanel.appendChild(imgElement);
        console.log('Done');
    } catch (error) {
        console.log('Error:', error);
    }
}

document.getElementById('generateButton').addEventListener('click', () => {
    const value = document.getElementById('userPrompt').value;
    query(value);
});

// Photo annotation function
function annotate(element) {
    const markerElement = document.getElementById(element)
    const markerArea = new markerjs2.MarkerArea(markerElement);
    markerArea.settings.displayMode = 'popup';
    markerArea.renderAtNaturalSize = true;
    markerArea.settings.defaultColor = 'black';
    markerArea.settings.defaultFillColor = 'white';

    markerArea.addEventListener('render', event => {
        document.getElementById(element).src = event.dataUrl;

    });
    markerArea.show();
}

// Calling the annotate function for the main editing area
document.getElementById('editButton').addEventListener('click', () => {
    annotate("marker-img");
});

// function to handle comic panel clicking and selection
function handlePanelClick(panel) {
    const isSamePanel = selectedPanel === panel;

    if (selectedPanel) {
        selectedPanel.classList.remove('selected');
    }

    panel.classList.toggle('selected', !isSamePanel);
    selectedPanel = isSamePanel ? null : panel;
}

// Edit image function
function editImage() {
    if (selectedPanel) {
        const selectedPanelImage = selectedPanel.querySelector('.panel-image');

        if (selectedPanelImage) {
            annotate(`${selectedPanelImage.id}`);
        } else {
            alert("No image available");
        }
    }
}

// Delete image function
function deleteImage() {
    if (selectedPanel) {
        const selectedPanelImage = selectedPanel.querySelector('.panel-image');

        if (selectedPanelImage) {
            selectedPanelImage.src = '';
        } else {
            alert("No image available");
        }
    }
}

// Change the image of the selected panel to the confirmed image generated by the user
function confirmChanges() {
    const markerImageSrc = document.getElementById('marker-img').src;
    if (selectedPanel) {
        const selectedPanelImage = selectedPanel.querySelector('img');

        if (selectedPanelImage) {
            selectedPanelImage.src = markerImageSrc;
        }
    } else { // If no panel is selected, fill the image in the first empty div(panel)
        /* const emptyPanels = document.getElementsByClassName("panel")
        let i = 0;
        while (emptyPanels.img.src !== "" && i < 10) {
            i++;
        }
        emptyPanels[i].src = markerImageSrc; */
        alert("Please select a panel where you want to insert the image");
    }
}

// Function to download the comic panel
document.getElementById('download-button').addEventListener('click', () => {
    const downloadElement = document.getElementsByClassName("comic-panel-wrapper")[0];
    html2canvas(downloadElement).then(canvas => {
        const dataURL = canvas.toDataURL();
        const a = document.createElement('a');

        a.href = dataURL;
        a.download = 'comic_panel.png';

        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
    });
});

function navigateToPage(page) {
    window.location.href = page;
}